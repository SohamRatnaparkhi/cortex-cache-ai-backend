name: Build and Deploy Services

on:
  pull_request:
    types: [closed]
    branches: [ main ]

jobs:
  detect-changes:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      service-a: ${{ steps.changes.outputs.service-a }}
      service-b: ${{ steps.changes.outputs.service-b }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            service-a:
              - 'content-processor/**'
            service-b:
              - 'inference/**'

  build-and-deploy:
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Service A
      - name: Build and push service A
        if: needs.detect-changes.outputs.service-a == 'true'
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPO_A }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f service-a/Dockerfile service-a
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # Get the image digest
          DIGEST=$(aws ecr describe-images --repository-name $ECR_REPOSITORY --image-ids imageTag=$IMAGE_TAG --query 'imageDetails[0].imageDigest' --output text)
          # Update Lambda function
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_A_FUNCTION_NAME }} \
            --image-uri $ECR_REGISTRY/$ECR_REPOSITORY@$DIGEST

      # Service B
      - name: Build and push service B
        if: needs.detect-changes.outputs.service-b == 'true'
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPO_B }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f service-b/Dockerfile service-b
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # Get the image digest
          DIGEST=$(aws ecr describe-images --repository-name $ECR_REPOSITORY --image-ids imageTag=$IMAGE_TAG --query 'imageDetails[0].imageDigest' --output text)
          # Update Lambda function
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_B_FUNCTION_NAME }} \
            --image-uri $ECR_REGISTRY/$ECR_REPOSITORY@$DIGEST
